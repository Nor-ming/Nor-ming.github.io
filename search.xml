<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IDA pro使用笔记</title>
    <url>/2021/02/07/IDA%20pro%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><escape><a id="more"></a></escape> </p>
<p>学习资料：IDA Pro    权威指南[美]Chris Eagle</p>
<h6 id="1-什么情况下需要使用反汇编？"><a href="#1-什么情况下需要使用反汇编？" class="headerlink" title="1.什么情况下需要使用反汇编？"></a>1.什么情况下需要使用反汇编？</h6><p>1)分析恶意软件<br>2)分析闭源软件的漏洞<br>3)分析闭源软件的互操作性<br>4)分析编译器生成的代码，以验证编译器的性能和准确性<br>5)在调试时显示程序指令</p>
<h6 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h6><p>动态分析：是指在严格控制的环境中执行恶意软件，并使用系统检测实用工具记录其所有行为。<br>静态分析：试图通过代码来理解程序的行为。(查看对恶意软件进行反汇编之后得到的代码清单）。</p>
<h6 id="3-基本的反汇编算法："><a href="#3-基本的反汇编算法：" class="headerlink" title="3.基本的反汇编算法："></a>3.基本的反汇编算法：</h6><p>1)确定进行反汇编的代码区域；<br>2)知道指令的起始地址，读取该地址（或文件偏移量）所包含的值，并执行一次表查找，将二进制操作码的值余它的汇编语言助记符对应起来；<br>3)获取指令并解码任何所需的操作数后，需要对它的汇编语言等价形式格式话，并将其在反汇编代码中输出。<br>4)输出一条指令后，继续反汇编下一条指令，并重复上述过程，直到反汇编完文件中的所有指令。</p>
<h6 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h6><p>汇编语言源代码主要采用两种语法：AT&amp;T语法和Intel语法。<br>两种最主要的反汇编算法：线性扫描和递归下降。</p>
<h6 id="5-线性扫描反汇编的优缺点："><a href="#5-线性扫描反汇编的优缺点：" class="headerlink" title="5.线性扫描反汇编的优缺点："></a>5.线性扫描反汇编的优缺点：</h6><p>优点：能够完全覆盖程序的所有代码段。<br>缺点：没有考虑到代码中可能混有数据。<br>GNU调试器（gdb),微软公司的WinDug调试器和objdump实用工具均采用线性扫描算法。</p>
<h6 id="6-IDA-pro：递归下降反汇编。"><a href="#6-IDA-pro：递归下降反汇编。" class="headerlink" title="6.IDA pro：递归下降反汇编。"></a>6.IDA pro：递归下降反汇编。</h6><h6 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h6><p>在使用IDA时，如果不知道是哪一种类型的文件，可以使用Go而不是New打开，以便跳过新文件导向。<br>用IDA加载文件，IDA会创建一个数据库，其组件分别保存在4个文件中，.id0,.id1,.nam,.til，分别对应是一个二叉树形式的数据库，描述每个程序字节的标记，与IDA的Named窗口中显示的给定程序位置有关的索引信息，用于存储与一个给定数据库的本地类型定义有关的信息。</p>
<h6 id="8-关闭IDA数据库："><a href="#8-关闭IDA数据库：" class="headerlink" title="8.关闭IDA数据库："></a>8.关闭IDA数据库：</h6><p>1）不打包数据库：不创建IDB文件，不建议；<br>2）打包数据库（存储）：将4个数据库组件文件存到一个IDB文件中，创建后，4个数据库组件文件即被删除；<br>3）打包数据库（压缩）：基本同上，唯一的差别在于数据库组件文件被压缩到IDB归档文件中。<br>4）收集垃圾：通常只在磁盘空间不足时使用；<br>5）不保存数据库：放弃当前对数据库所做的更改的唯一办法，类似撤销和还原功能。</p>
<h6 id="9-IDA崩溃怎么办？"><a href="#9-IDA崩溃怎么办？" class="headerlink" title="9.IDA崩溃怎么办？"></a>9.IDA崩溃怎么办？</h6><p>可以选择还原上次保存的版本，或依旧使用已打开的可能遭到破坏的版本，选择“继续使用未打包的库“并不能保证可以恢复所做的全部修改。</p>
<h6 id="10-IDA桌面简介："><a href="#10-IDA桌面简介：" class="headerlink" title="10.IDA桌面简介："></a>10.IDA桌面简介：</h6><p>1）彩色的水平带是IDA的概况导航栏（导航带），是被加载文件地址空间的线性视图。<br>2）对函数视图中的函数进行选中，即会跳转到反汇编视图中，可使用空格键在列表视图样式和图形试图样式（流程图）中切换。<br>3）使用View-&gt;Open Subviews命令恢复无意中关闭的数据显示窗口；<br>     使用Windows-&gt;Reset Desktop 命令可以迅速将桌面恢复到原始布局；<br>     使用Windows-&gt;Save Desktop 命保存你认为特别有用的当前桌面布局，使用Windows-&gt;Load Desktop命令迅速打开你之前保存的一个桌面布局；</p>
<h6 id="11-IDA不提供撤销功能！！！"><a href="#11-IDA不提供撤销功能！！！" class="headerlink" title="11.IDA不提供撤销功能！！！"></a>11.IDA不提供撤销功能！！！</h6><h6 id="12-ESC键用于关闭窗口。"><a href="#12-ESC键用于关闭窗口。" class="headerlink" title="12.ESC键用于关闭窗口。"></a>12.ESC键用于关闭窗口。</h6><h6 id="13-反汇编窗口："><a href="#13-反汇编窗口：" class="headerlink" title="13.反汇编窗口："></a>13.反汇编窗口：</h6><p>反汇编窗口又叫IDA-View窗口，是操作和分析二进制文件的主要工具。<br>1）IDA图形视图：<br>      将一个函数分解成许多基本块，显示该函数由一个块到另一个快的控制流程。<br>      每个基本块都有唯一的入口点和退出点。<br>      Yes绿色（执行分支），No红色（不执行分支）可用CTRL和加减号以及鼠标的滑轮来调整图形的大小，必要时使用概览。</p>
<h6 id="14-Names窗口（名称窗口）："><a href="#14-Names窗口（名称窗口）：" class="headerlink" title="14.Names窗口（名称窗口）："></a>14.Names窗口（名称窗口）：</h6><p>简要列举了一个二进制文件的所有全局名称，名称是指对一个程序虚拟地址的符号描述，可通过双击该窗口中的名称来立即跳转到显示该名称的反汇编视图。</p>
<h6 id="15-十六进制窗口："><a href="#15-十六进制窗口：" class="headerlink" title="15.十六进制窗口："></a>15.十六进制窗口：</h6><p>显示程序内容和列表的标准十六进制代码，每行显示16个字节，以及对应的ASCII字符。在反汇编窗口中，光标指向地址004013FA（一个调用指令），那么，在十六进制窗口中，构成这个指令的全部5个字节均突出显示。</p>
<h6 id="16-导入窗口："><a href="#16-导入窗口：" class="headerlink" title="16.导入窗口："></a>16.导入窗口：</h6><p>使用共享库时，IDA才需要用到导入窗口，静态链接的二进制文件不存在外部依赖关系，因此不需要导入其他内容。</p>
<h6 id="17-结构体窗口："><a href="#17-结构体窗口：" class="headerlink" title="17.结构体窗口："></a>17.结构体窗口：</h6><p>用于显示IDA决定在一个二进制文件中使用的任何复杂的数据结构的布局。可以为标准数据结构的布局提供现成的参考，帮助自己创建自己的可用作内存布局模块的数据结构。</p>
<h6 id="18-枚举窗口："><a href="#18-枚举窗口：" class="headerlink" title="18.枚举窗口："></a>18.枚举窗口：</h6><p>列出标准枚举数据类型，可以使用枚举来代替整数常量，提高反汇编代码的可读性。</p>
<h6 id="19"><a href="#19" class="headerlink" title="19."></a>19.</h6><p>IDA中的段和二进制中的段不是一个意思。</p>
<h6 id="20"><a href="#20" class="headerlink" title="20."></a>20.</h6><p>按下快捷键G可以打开“跳转到地址“的窗口。</p>
<h6 id="21"><a href="#21" class="headerlink" title="21."></a>21.</h6><p>IDA注释以分号为前缀，表示这一行分号以后的部分属于前缀。</p>
<h6 id="22"><a href="#22" class="headerlink" title="22."></a>22.</h6><p>IDA的脚本语言叫IDC。</p>
<p>注：<br>对于mips架构下的逆向工程，ida不能进行反汇编<br>如果仍想使用ida解决，可以下载插件Retdec，对v.0.7版本的ida可能不识别。</p>
]]></content>
  </entry>
  <entry>
    <title>CTFd平台搭建（文件方式）</title>
    <url>/2021/02/07/CTFd%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E6%96%87%E4%BB%B6%E6%96%B9%E5%BC%8F%EF%BC%89/</url>
    <content><![CDATA[<p><escape><a id="more"></a></escape> </p>
<p>记录一下自己搭建过程中踩的坑<br>没有云服务器，在虚拟机中搭建的，使用的是Ubuntu16.04.7LTS<br>查看当前版本的命令：<code>cat /etc/issue</code><br>然后发现自己的虚拟机连不上网了，重新弄一下吧，选的是NAT模式。<br><img src="https://img-blog.csdnimg.cn/20200912164424975.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FsaWVuRW93eW5XYW4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>注意给它管理员权限才能更改。</p>
<p>连上网后就可以开始了<br>1.升级源</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<p>在升级源的时候可能会报错<br><img src="https://img-blog.csdnimg.cn/2020091216540780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FsaWVuRW93eW5XYW4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我自己忘记截图了，用一下网上博客的图片吧<br>遇到这种情况是因为连接不到 US 的服务器，所以更新失败，需要在系统设置中将源服务器设置为中国的。<br><img src="https://img-blog.csdnimg.cn/20200912165825384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FsaWVuRW93eW5XYW4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这样应该就可以了，如果还不巧遇到了报的错误为”Failed to fetch 404 Not Found”，这个问题参考了一下<a href="https://www.cnblogs.com/wangshaowei/p/10994764.html">https://www.cnblogs.com/wangshaowei/p/10994764.html</a>的博客，说是是因为每个Ubuntu版本都有生命结束周期（EOL）时间，常规的Ubuntu发行版提供18个月的支持，而LTS（长期支持）版本则长达3年（服务器版本）和5年（桌面版本）。当某个Ubuntu版本达到生命结束周期时，其仓库就不能再访问了，你也不能再从Canonical获取任何维护更新和安全补丁。如果你所使用的Ubuntu系统已经被结束生命周期，你就会从apt-get或aptitude得到以下404错误，因为它的仓库已经被遗弃了。</p>
<p>解决方法为将/etc/apt/sources.list路径下的源替换为旧版本仓库的源。</p>
<p>2.安装git，因为CTFd的源码和部署好的题目都是要通过github传输的</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure>
<p>3.安装pip　　</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo apt install python-pip</span><br></pre></td></tr></table></figure>
<p>安装pip的时候也会遇到一些问题，如果出现异常可以升级pip</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>
<p>4.安装Flask，因为CTFd是基于Flask框架建造的，所以要搭建CTFd要安装Flask</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo pip install Flask</span><br></pre></td></tr></table></figure>
<p>5.下载CTFd</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo git clone https:<span class="comment">//github.com/isislab/CTFd.git</span></span><br></pre></td></tr></table></figure>
<p>6.安装CTFd</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">cd CTFd</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo ./prepare.sh</span><br></pre></td></tr></table></figure>
<p>第二条命令执行完了之后可能会遇到警告和报错，下面逐步介绍一下如何解决<br><img src="https://img-blog.csdnimg.cn/20200912171919176.png#pic_center" alt="在这里插入图片描述"><br>这是由于Python版本的问题了，Ubuntu自带2.7和3.5版本的Python，而2的版本在2020年1月就停止维护了，未来的pip版本将放弃对Python 2.7的支持。我们需要将2的版本改成3的。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 <span class="number">100</span></span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 <span class="number">150</span></span><br></pre></td></tr></table></figure>
<p>我们可以使用这两个命令将2 改成3<br>改完了之后可以检查一下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure>
<p>这个命令可以看到当前Pyhton的版本，但是可能不准确，因为通过改变指向可以让它显示，但是并不能将环境也改变成3 ，而环境变量是和默认有关联的<br>可通过查看环境来确定，如下命令</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">env python</span><br></pre></td></tr></table></figure>
<p>如果此时显示的是3 的版本那就是成功改变了<br>接下来我们需要给3 安装它的pip，否则它会出现<br>/usr/bin/python3: No module named pip<br>也会出现这样的报错<br><img src="https://img-blog.csdnimg.cn/20200912173314758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FsaWVuRW93eW5XYW4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>下载安装pip的方法很简单，在虚拟机中的官网下载按照说明安装就行了。注意要使用sudo命令不然没有权限会安装失败。</p>
<p>可能还会出现这样的警告<br><img src="https://img-blog.csdnimg.cn/20200912174111985.png#pic_center" alt="在这里插入图片描述"><br>这个执行以下命令应该就可以解决了</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo chown -R root /home/$USERNAME/.cache/pip/</span><br><span class="line">sudo chown -R root /home/$USERNAME/.cache/pip/http/</span><br></pre></td></tr></table></figure>
<p>然后我们再执行安装CTFd的命令，发现它又出现了新的报错<br><img src="https://img-blog.csdnimg.cn/20200912174603106.png#pic_center" alt="在这里插入图片描述"><br>查看了pydantic的官方文档之后发现也是由于Pyhton版本的问题，他它需要3.6及以上的版本才能够支持，Python自带的版本最高只有3.5，这就需要升级<br>可以参考这篇博客，方法非常有效，而且有提供安装Python3.6之后怎样预防崩溃<br><a href="https://segmentfault.com/a/1190000021838605">https://segmentfault.com/a/1190000021838605</a><br>附上截图防止失效<br><img src="https://img-blog.csdnimg.cn/20200912175157339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FsaWVuRW93eW5XYW4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>如果不小心真的把Ubuntu弄崩溃了导致终端框打不开，还可以参考这一篇博客<br><a href="https://blog.csdn.net/DeepWolf/article/details/88800603">https://blog.csdn.net/DeepWolf/article/details/88800603</a></p>
<p>这篇博客也介绍了Python3.6的安装方法以及如何改变环境，一定要记得改环境，不然依然就无法成功。<br><a href="https://blog.csdn.net/qq_32216809/article/details/86347926">https://blog.csdn.net/qq_32216809/article/details/86347926</a></p>
<p>这样再执行安装CTFd的命令应该就没有问题了</p>
<p>7.运行CTFd（要在打开CTFd文件的命令后执行（cd CTF））</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo python serve.py</span><br></pre></td></tr></table></figure>
<p>虚拟机的浏览器中访问127.0.0.1：4000/就可以看待自己的CTFd平台了<br><img src="https://img-blog.csdnimg.cn/20200912180012276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FsaWVuRW93eW5XYW4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>不足的是它访问的速度非常慢…目前还不清楚应该如何解决，这篇博客也许能够提供帮助。<br><a href="https://blog.csdn.net/weixin_43880435/article/details/107339592?utm_source=app">https://blog.csdn.net/weixin_43880435/article/details/107339592?utm_source=app</a></p>
<p>如果想要让它在物理机中访问需要安装gunicorn并规定映射的端口<br>我尝试了但是没有成功，大家可以试一试。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo pip install gunicorn</span><br><span class="line">sudo gunicorn --bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8000</span> -w <span class="number">1</span> <span class="string">&quot;CTFd:create_app()&quot;</span></span><br><span class="line">sudo pip install gunicorn</span><br></pre></td></tr></table></figure>
<p>关于速度慢可以尝试这个<br><a href="https://blog.csdn.net/asd413850393/article/details/98123982">https://blog.csdn.net/asd413850393/article/details/98123982</a></p>
<p>嗯，以上就是这次搭建的全过程，遇到了很多问题，下次尝试用docker搭建一下~</p>
]]></content>
  </entry>
</search>
